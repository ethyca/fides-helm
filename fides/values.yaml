# Default values for Fides.

# fides is the main application that runs the Admin UI and API endpoints.
fides:
  image:
    repository: ethyca/fides
    pullPolicy: IfNotPresent
    # Overrides the Fides image tag whose default is the chart appVersion.
    tag: ""
  configuration:
    # fides.configuration.dbSecretName is the name of the Kubernetes secret containing the Postgres connection information
    # This secret should have at least the following keys: DB_HOST, DB_PORT, DB_USERNAME, DB_PASSWORD, DB_DATABASE
    dbSecretName: ""
    # fides.configuration.redisSecretName is the name of the Kubernetes secret containing the Redis connection information
    # This secret should have at least the following keys: REDIS_HOST, REDIS_PORT, REDIS_PASSWORD
    redisSecretName: ""
    # fides.configure.additionalEnvVar adds arbitrary environment variables to the configuration, in addition to those set
    # by the Helm chart. See https://ethyca.github.io/fides/installation/configuration/ for all possible values.
    additionalEnvVars:
      - name: FIDES__LOG_PII 
        value: "false"
      - name: FIDES__LOGGING__LEVEL # Accepted values include: DEBUG, INFO, WARNING, ERROR, and CRITICAL.
        value: "DEBUG"
      - name: FIDES__EXECUTION__SUBJECT_IDENTITY_VERIFICATION_REQUIRED
        value: "false"
      - name: FIDES__EXECUTION__REQUIRE_MANUAL_REQUEST_APPROVAL
        value: "true"
      - name: FIDES__USER__ANALYTICS_OPT_OUT
        value: "true"
      - name: FIDES__REDIS__SSL
        value: "true"
      - name: FIDES__REDIS__SSL_CERT_REQS # Accepted values include: none, optional and require.
        value: "none"
      # Additional environment variables may be declared here.
  fullnameOverride: ""
  service:
    type: NodePort
    port: 8080
  workers:
    # fides.workers.enabled determines whether the deployment will use dedicated Fides workers to process DSRs.
    # This should be enabled in production environments.
    enabled: false
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: 80

# privacyCenter is the end-user facing application where data subjects can submit privacy requests.
privacyCenter:
  # privacyCenter.enabled determines whether a privacy center will be deployed. 
  enabled: true
  image:
    repository: ethyca/fides-privacy-center
    pullPolicy: IfNotPresent
    # Overrides the Fides Privacy Center image tag whose default is the chart appVersion.
    tag: ""
  configuration:
    # privacyCenter.configuration.configJsonPath specifies the location of the config.json as described in https://ethyca.github.io/fides/ui/privacy_center/. 
    # Note: the value of server_url_production will be overwritten to use the hostname specified by ingress.hosts.fides
    configJsonPath: config/privacyCenterConfig.json
    # privacyCenter.configuration.configCSSPath specifies the location of the config.css file to override the default styles.
    configCSSPath: config/privacyCenterConfig.css
  nameOverride: ""
  fullnameOverride: ""
  service:
    type: NodePort
    port: 3000

nameOverride: ""
imagePullSecrets: []

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    fides: "" # fides.example.com
    privacyCenter: "" # privacy.example.com
  tls: []
  #  - secretName: fides-tls
  #    hosts:
  #      - privacy.example.com

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
