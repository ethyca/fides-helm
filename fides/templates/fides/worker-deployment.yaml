{{- include "fides.worker.validateUniqueNames" . }}
{{- $workers := .Values.fides.workerConfiguration.workers | default list }}
{{- $_ := set $ "worker" ( ge (len $workers) 1) }}
{{- $isFidesplus := include "fides.isFidesplus" . }}
{{- if $.worker }}
{{- range $workers }}
{{- $workerCount := .count }}
{{- if eq $isFidesplus "true" }}
  {{- if eq .name "general" }}
    {{- $workerCount = 0 }}
  {{- else if or (eq .name "dsr") (eq .name "consent") (eq .name "other") }}
    {{- $workerCount = 1 }}
  {{- end }}
{{- end }}
{{- if gt ($workerCount | int) 0 }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ printf "%s-%s" (include "fides.worker.fullname" $) .name}}
  labels:
    {{- include "fides.labels" $ | nindent 4 }}
    fid.es/worker: {{ .name }}
spec:
  replicas: {{ $workerCount | int }}
  selector:
    matchLabels:
      {{- include "fides.worker.selectorLabels" $ | nindent 6 }}
      fid.es/worker: {{ .name }}
  strategy:
    {{- include "fides.deploymentStrategy" $ | nindent 4 }}
  template:
    metadata:
      {{- with $.Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "fides.worker.selectorLabels" $ | nindent 8 }}
        fid.es/worker: {{ .name }}
    spec:
      {{- with $.Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "fides.serviceAccountName" $ }}
      securityContext:
        {{- toYaml $.Values.podSecurityContext | nindent 8 }}
      containers:
        - name: fides
          securityContext:
            {{- toYaml $.Values.securityContext | nindent 12 }}
          image: {{ printf "%s:%s" $.Values.fides.image.repository (default (include "fides.dockerTag" $) .imageTagOverride) }}
          imagePullPolicy: {{ $.Values.fides.image.pullPolicy }}
          command: ["fides"]
          {{- if and (hasKey . "queues") (hasKey . "excludeQueues") }}
            {{- fail (printf "Worker '%s' cannot have both --queues and --exclude-queues passed" .name) }}
          {{- end }}
          args:
            - worker
            {{- if hasKey . "queues" }}
            - {{ printf "--queues=%s" (join "," .queues) }}
            {{- else if hasKey . "excludeQueues" }}
            - {{ printf "--exclude-queues=%s" (join "," .excludeQueues) }}
            {{- end }}
          env:
            - name: FIDES__CONFIG_PATH
              value: {{ printf "%s/fides.toml" (include "fides.configPath" $) }}
            {{- include "fides.env" $ | nindent 12 }}
            {{- include "custom_fides_secrets" $ | indent 10 }}
          envFrom:
            - secretRef: 
                name: {{ include "fides.fidesSecuritySecretName" $ }}
            {{- if $.Values.fides.configuration.additionalEnvVarsSecret }}
            - secretRef: 
                name: {{ $.Values.fides.configuration.additionalEnvVarsSecret }}
            {{- end }}
          livenessProbe:
            exec:
              command: [
                "bash",
                "-c",
                "celery --quiet --no-color --app fides.api.tasks inspect ping --destination celery@$HOSTNAME --json"
              ]
            initialDelaySeconds: {{ $.Values.fides.startupTimeSeconds | default 30 }}
            periodSeconds: 60
            timeoutSeconds: {{ $.Values.fides.healthCheckTimeoutSeconds | default 5 }}
          volumeMounts:
          - name: {{ include "fides.configVolume" $ }}
            mountPath: {{ include "fides.configPath" $ }}
          {{- if $.Values.fides.configuration.redisCaSecretName }}
          - name: {{ include "fides.redisCaVolume" $ }}
            mountPath: {{ include "fides.redisCaPath" $ }}
            readOnly: true
          {{- end }}
          resources:
            {{- toYaml .resources | nindent 12 }}
      volumes:
        - name: {{ include "fides.configVolume" $ }}
          configMap:
            name: {{ include "fides.worker.tomlConfigMapName" $ }}
        {{- if $.Values.fides.configuration.redisCaSecretName }}
        - name: {{ include "fides.redisCaVolume" $ }}
          secret:
            secretName: {{ $.Values.fides.configuration.redisCaSecretName }}
        {{- end }}
      {{- with $.Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
{{- end }}
{{- end }}
{{- end }}
